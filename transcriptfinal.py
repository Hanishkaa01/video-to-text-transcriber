# -*- coding: utf-8 -*-
"""Transcriptfinal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GN-CnqDuFyCqr0HYD2EhWf7lXx_HW-86
"""

!pip install pytube

!pip install moviepy

!pip install openai-whisper

!apt update && apt install -y ffmpeg
!pip install -U yt-dlp

pip install pydub

import yt_dlp

def download_video(youtube_url):
    ydl_opts = {
        'format': 'bestvideo+bestaudio/best',  # Download best video and audio available
        'outtmpl': 'video.mp4',  # Save as video.mp4
        'merge_output_format': 'mp4'  # Ensure the merged file is in mp4 format
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        ydl.download([youtube_url])

# Use the updated YouTube link
download_video('https://youtu.be/dQw4w9WgXcQ?si=NQ-TCTRU-Umv__jH')

from pydub import AudioSegment

def extract_audio_with_pydub(file_path):
    audio = AudioSegment.from_file(file_path)
    audio.export("audio.wav", format="wav")
    print("Audio extracted using pydub.")

# Extract audio from the downloaded video
extract_audio_with_pydub('video.mp4')

import whisper

def transcribe_audio(file_path):
    model = whisper.load_model("base")  # Load the base model
    result = model.transcribe(file_path)
    print("Transcript: \n", result['text'])

# Transcribe the extracted audio
transcribe_audio('audio.wav')

import os
print("Video Exists:", os.path.exists('video.mp4'))
print("Audio Exists:", os.path.exists('audio.wav'))

def download_video(youtube_url):
    try:
        ydl_opts = {
            'format': 'bestvideo+bestaudio/best',
            'outtmpl': 'video.mp4',
            'merge_output_format': 'mp4'
        }
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([youtube_url])
    except Exception as e:
        print("Error downloading video:", str(e))

def extract_audio_with_pydub(file_path):
    try:
        audio = AudioSegment.from_file(file_path)
        audio.export("audio.wav", format="wav")
        print("Audio extracted using pydub.")
    except Exception as e:
        print("Error extracting audio:", str(e))

def transcribe_audio(file_path):
    try:
        model = whisper.load_model("base")
        result = model.transcribe(file_path)
        print("Transcript: \n", result['text'])
    except Exception as e:
        print("Error transcribing audio:", str(e))

def transcribe_audio(file_path):
    try:
        model = whisper.load_model("base")
        result = model.transcribe(file_path)
        print("Transcript: \n", result['text'])

        # Save transcript to a text file
        with open("transcript.txt", "w") as f:
            f.write(result['text'])
            print("Transcript saved to transcript.txt")
    except Exception as e:
        print("Error transcribing audio:", str(e))

import whisper
from google.colab import files

def transcribe_audio(file_path):
    try:
        model = whisper.load_model("base")  # Load the Whisper model
        result = model.transcribe(file_path)  # Transcribe the audio
        print("Transcript: \n", result['text'])  # Print the transcript

        # Save transcript to a text file
        with open("transcript.txt", "w") as f:
            f.write(result['text'])  # Write the transcript to the file
            print("Transcript saved to transcript.txt")

        # Download the transcript file
        files.download("transcript.txt")  # Download the file
    except Exception as e:
        print("Error transcribing audio:", str(e))

transcribe_audio('audio.wav')